# Input: Rolling HTML with section headers 
#   <h4><a href=link>pubdate</a> title</h4>
#   Adjust the $INPUT_ITEM_HEADER_REGEX to your own format
# Output: RSS Feed

# NOTE: The RSS item <pubDate> gets populated with whatever 'pubdate' contains 
#   in the html header; may need to post-convert to RFC822 format.

$INPUT_ITEM_HEADER_REGEX = ".*h4.*href=\"(?<link>[^\"]*)\">(?<pubdate>[^<]*)<\/a>\\s*(?<title>.*)<\/h4>";
$INPUT_END_REGEX = "Questions, comments";

my $PROD_BASE_URL = "";
my $FEED_URL =  "rss.xml";
my $FEED_TITLE = "RSS Feed";

my $DATE_OUT_FORMAT = "%a, %d %b %Y %H:%M:%S %z";
my $build_date = strftime $DATE_OUT_FORMAT, localtime(time());

$HEADER = "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<rss version=\"2.0\" xmlns:atom=\"http://www.w3.org/2005/Atom\">
<channel>
<title>$FEED_TITLE</title>
<link>$PROD_BASE_URL</link>
<description></description>
<lastBuildDate>$build_date</lastBuildDate>
<atom:link href=\"$FEED_URL\" rel=\"self\" type=\"application/rss+xml\" />
";

$ITEM_HEADER = "
<item>
<title>\$+{'title'}</title>
<link>$PROD_BASE_URL/\$+{'link'}</link>
<guid>$PROD_BASE_URL/\$+{'link'}</guid>
<pubDate>\$+{'pubdate'}</pubDate>
<description><![CDATA[";

$ITEM_FOOTER = "]]></description>\n</item>\n";
$FOOTER = "</channel>\n</rss>";

# vim: set ft=perl :
